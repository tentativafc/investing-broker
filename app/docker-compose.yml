version: '3'

services:
  postgres:
    image: 'postgres:13.1-alpine'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    volumes:
      - ./docker/postgres-data-user:/var/lib/postgresql/data
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'

  # mongo_ibovespa_assets:
  #   image: mongo:4.4.2
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=mongo
  #     - MONGO_INITDB_ROOT_PASSWORD=123456
  #     - MONGO_INITDB_DATABASE=ibovespa_assets
  #   ports:
  #     - '27017:27017'
  #   volumes:
  #     - ./docker/mongo-data-ibovespa-assets:/data/db
  #     - ./db-init-scripts/mongo-init-ibovespa-assets.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  # mongo_currency:
  #   image: mongo:4.4.2
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=mongo
  #     - MONGO_INITDB_ROOT_PASSWORD=123456
  #     - MONGO_INITDB_DATABASE=currency
  #   ports:
  #     - '27018:27017'
  #   volumes:
  #     - ./docker/mongo-data-currency:/data/db
  #     - ./db-init-scripts/mongo-init-currency.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  # mongo_selic:
  #   image: mongo:4.4.2
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=mongo
  #     - MONGO_INITDB_ROOT_PASSWORD=123456
  #     - MONGO_INITDB_DATABASE=selic
  #   ports:
  #     - '27019:27017'
  #   volumes:
  #     - ./docker/mongo-data-selic:/data/db
  #     - ./db-init-scripts/mongo-init-selic.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    
  sts_service:
    build: 
      dockerfile: Dockerfile
      context: ./backend/sts-service
    ports:
      - '50051:50051'
    volumes: 
      - ./backend/sts-service:/app
    depends_on: 
      - postgres

  user_service:
    build: 
      dockerfile: Dockerfile
      context: ./backend/user-service
    ports:
      - '8081:8081'
    volumes: 
      - ./backend/user-service:/app
    depends_on: 
      - postgres
      - sts_service
  
  # frontend:
  #   build: 
  #     dockerfile: Dockerfile
  #     context: ./frontend/app
  #   ports:
  #     - '3000:3000'
  #   volumes: 
  #     - /app/node_modules
  #     - ./frontend/app:/app

